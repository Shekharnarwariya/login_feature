package com.hti.smpp.addressbook.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hti.smpp.addressbook.request.ContactEntryRequest;
import com.hti.smpp.addressbook.services.ContactEntryService;

@RestController
@RequestMapping("/api/addressbook")
public class AddressBookController {
	
	@Autowired
	private ContactEntryService contactEntryService;
	
	@PostMapping(value = "/save/contactentry", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	public ResponseEntity<?> saveContactEntry(@RequestParam("contactFile") MultipartFile contactFile,@RequestParam("contactEntryRequest") String contactEntryRequest , @RequestHeader("username") String username){
		
		ContactEntryRequest request;
		
		try {
			ObjectMapper objectMapper = new ObjectMapper();
			request = objectMapper.readValue(contactEntryRequest, ContactEntryRequest.class);
			request.setFile(contactFile);
			return this.contactEntryService.saveContactEntry(request, username);
		}catch (JsonProcessingException e) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
		} catch (Exception ex) {
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		}
		
	}

}
